#version 450

#extension GL_EXT_debug_printf : enable
#extension GL_EXT_shader_8bit_storage : enable
#extension GL_ARB_gpu_shader_int64 : enable

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0) readonly buffer InputBuffer {
	uint8_t in_data[];
};

layout(set = 0, binding = 1) readonly buffer PfacTableBuffer {
	uint pfac_table[];
};

layout(set = 0, binding = 2) buffer OutputBuffer {
	uint out_data[];
};

layout(set = 0, binding = 3) buffer OutStateBuffer {
	uint out_state[1024];
};

layout(set = 0, binding = 4) buffer InStateBuffer {
	uint in_state[1024];
};

layout(push_constant) uniform Metadata {
	uint64_t offset;
} metadata;

// ===

#include "pfac_core.comp"

// ===

void process_in_states() {
	uint64_t idx = 0;
	uint in_data_len = in_data_len();

	uint64_t id = 0;
	uint state = 0;
	uint64_t start_idx = 0;

	while(load_state(id, state, start_idx)) {
		// debugPrintfEXT("[pfac.comp/INFO]: Loaded state %u\n", state);
		while(true) {
			if(idx >= in_data_len) {
				if(state != 0) {
					save_state(id, state, start_idx);
				}
				break;
			}

			uint next_state = 0;
			uint data_idx = read_in(idx);
			if(pfac_table_lookup(state, data_idx, next_state)) {
				state = next_state;
				idx += 1;
				id = match_id_hash_add(id, data_idx);
				// id += 1;
				// debugPrintfEXT("[pfac.comp/INFO]: Lookup successful, changing state to %u\n", state);
			} else if(pfac_table_is_terminator(state)) {
				// debugPrintfEXT("[pfac.comp/INFO]: Found match at idx %u..%u (offset %u)\n", start_idx, idx - 1, metadata.offset);
				write_match(id, uint(start_idx), uint(idx - 1 + metadata.offset));
				break;
			} else {
				break;
			}
		}
	}
}

// ===

void main() {
	// It's very unlikely that there are more than say one or two match candidates that were cross-border - So only get workgroup 0 to deal with it
	if(gl_WorkGroupID.x == 0) {
		process_in_states();
	}

	uint64_t idx = uint64_t(gl_GlobalInvocationID.x);
	uint in_data_len = in_data_len();

	uint state = 0;
	uint64_t start_idx = idx;
	uint64_t id = match_id_hash_init();

	while(true) {
		if(idx >= in_data_len) {
			if(state != 0) {
				save_state(id, state, uint(start_idx + metadata.offset));
				// debugPrintfEXT("[pfac.comp/INFO]: Saving state %u\n", state);
			}
			break;
		}

		uint next_state = 0;
		uint data_idx = read_in(idx);
		if(pfac_table_lookup(state, data_idx, next_state)) {
			state = next_state;
			idx += 1;
			id = match_id_hash_add(id, data_idx);
			// id += 1;
			// debugPrintfEXT("[pfac.comp/INFO]: Lookup successful, changing state to %u\n", state);
		} else if(pfac_table_is_terminator(state)) {
			// debugPrintfEXT("[pfac.comp/INFO]: Found match at idx %u..%u (offset %u)\n", start_idx, idx - 1, metadata.offset);
			write_match(id, uint(start_idx + metadata.offset), uint(idx - 1 + metadata.offset));
			break;
		} else {
			break;
		}
	}
}